--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 1) then
				return v5(v27);
			end
			if (v26 == 0) then
				v27 = {};
				for v44 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v44, v44 + 1)), v1(v2(v25, 1 + ((v44 - 1) % #v25), 1 + ((v44 - 1) % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = tonumber;
	local v9 = string[v7("\175\175\192\173", "\205\214\180\200\54\68")];
	local v10 = string[v7("\17\245\52\38", "\114\157\85\84")];
	local v11 = string[v7("\187\209\201", "\200\164\171\115\164\61\150")];
	local v12 = string[v7("\132\173\225\1", "\227\222\148\99\37")];
	local v13 = string[v7("\235\54\66", "\153\83\50\50\150")];
	local v14 = table[v7("\78\82\120\112\29\103", "\45\61\22\19\124\19\203")];
	local v15 = table[v7("\176\207\1\8\231\22", "\217\161\114\109\149\98\16")];
	local v16 = math[v7("\120\22\37\32\108", "\20\114\64\88\28\220")];
	local v17 = getfenv or function()
		return _ENV;
	end;
	local v18 = setmetatable;
	local v19 = pcall;
	local v20 = select;
	local v21 = unpack or table[v7("\168\63\17\211\183\243", "\221\81\97\178\212\152\176")];
	local v22 = tonumber;
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v30 == 1) then
				v35 = nil;
				v36 = nil;
				v37 = nil;
				v38 = nil;
				v30 = 2;
			end
			if (2 == v30) then
				v39 = nil;
				v40 = nil;
				v41 = nil;
				v42 = nil;
				v30 = 3;
			end
			if (v30 == 0) then
				v31 = 0;
				v32 = nil;
				v33 = nil;
				v34 = nil;
				v30 = 1;
			end
			if (v30 == 3) then
				v43 = nil;
				while true do
					local v45 = 0;
					while true do
						if (2 == v45) then
							if (v31 == 2) then
								local v46 = 0;
								while true do
									if (v46 == 1) then
										function v36()
											local v54 = 0;
											local v55;
											local v56;
											while true do
												if (v54 == 1) then
													return (v56 * 256) + v55;
												end
												if (v54 == 0) then
													v55, v56 = v9(v28, v32, v32 + 2);
													v32 = v32 + 2;
													v54 = 1;
												end
											end
										end
										v31 = 3;
										break;
									end
									if (v46 == 0) then
										function v35()
											local v57 = 0;
											local v58;
											local v59;
											while true do
												if (v57 == 0) then
													v58 = 0;
													v59 = nil;
													v57 = 1;
												end
												if (v57 == 1) then
													while true do
														local v108 = 0;
														while true do
															if (v108 == 0) then
																if (v58 == (1 + 0)) then
																	return v59;
																end
																if (0 == v58) then
																	local v134 = 0;
																	while true do
																		if (v134 == 1) then
																			v58 = 1;
																			break;
																		end
																		if (v134 == 0) then
																			v59 = v9(v28, v32, v32);
																			v32 = v32 + 1;
																			v134 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v36 = nil;
										v46 = 1;
									end
								end
							end
							if (v31 == 0) then
								local v47 = 0;
								while true do
									if (v47 == 0) then
										v32 = 1;
										v33 = nil;
										v47 = 1;
									end
									if (v47 == 1) then
										v28 = v12(v11(v28, 5), v7("\84\131", "\122\173\135\125\155"), function(v60)
											if (v9(v60, 2) == 79) then
												local v96 = 0;
												local v97;
												while true do
													if (v96 == 0) then
														v97 = 0;
														while true do
															if (v97 == 0) then
																local v130 = 0;
																while true do
																	if (0 == v130) then
																		v33 = v8(v11(v60, 1, 1));
																		return "";
																	end
																end
															end
														end
														break;
													end
												end
											else
												local v98 = 0;
												local v99;
												local v100;
												while true do
													if (0 == v98) then
														v99 = 0;
														v100 = nil;
														v98 = 1;
													end
													if (v98 == 1) then
														while true do
															if (v99 == 0) then
																v100 = v10(v8(v60, 16));
																if v33 then
																	local v142 = 0;
																	local v143;
																	local v144;
																	while true do
																		if (v142 == 0) then
																			v143 = 0;
																			v144 = nil;
																			v142 = 1;
																		end
																		if (v142 == 1) then
																			while true do
																				local v161 = 0;
																				while true do
																					if (0 == v161) then
																						if (v143 == 1) then
																							return v144;
																						end
																						if (0 == v143) then
																							local v167 = 0;
																							while true do
																								if (v167 == 1) then
																									v143 = 1;
																									break;
																								end
																								if (v167 == 0) then
																									v144 = v13(v100, v33);
																									v33 = nil;
																									v167 = 1;
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																else
																	return v100;
																end
																break;
															end
														end
														break;
													end
												end
											end
										end);
										v31 = 1;
										break;
									end
								end
							end
							v45 = 3;
						end
						if (v45 == 3) then
							if (v31 == 7) then
								local v48 = 0;
								while true do
									if (v48 == 0) then
										function v43(v61, v62, v63)
											local v64 = 0;
											local v65;
											local v66;
											local v67;
											while true do
												if (v64 == 1) then
													v67 = v61[3];
													return function(...)
														local v109 = 0;
														local v110;
														local v111;
														local v112;
														local v113;
														local v114;
														local v115;
														local v116;
														local v117;
														local v118;
														local v119;
														local v120;
														local v121;
														local v122;
														local v123;
														while true do
															if (v109 == 3) then
																v121 = (v118 - v112) + 1;
																v122 = nil;
																v123 = nil;
																while true do
																	local v131 = 0;
																	local v132;
																	while true do
																		if (v131 == 0) then
																			v132 = 0;
																			while true do
																				if (0 == v132) then
																					local v162 = 0;
																					while true do
																						if (0 == v162) then
																							v122 = v110[v114];
																							v123 = v122[1];
																							v162 = 1;
																						end
																						if (v162 == 1) then
																							v132 = 1;
																							break;
																						end
																					end
																				end
																				if (v132 == 1) then
																					if (v123 <= 69) then
																						if (v123 <= 34) then
																							if (v123 <= 16) then
																								if (v123 <= 7) then
																									if (v123 <= 3) then
																										if (v123 <= 1) then
																											if (v123 == 0) then
																												v120[v122[2 + 0]] = v43(v111[v122[3]], nil, v63);
																											elseif (v120[v122[2]] < v120[v122[4]]) then
																												v114 = v114 + 1;
																											else
																												v114 = v122[3];
																											end
																										elseif (v123 == 2) then
																											if v120[v122[2 - 0]] then
																												v114 = v114 + 1;
																											else
																												v114 = v122[3];
																											end
																										else
																											local v180 = 0;
																											local v181;
																											local v182;
																											while true do
																												if (0 == v180) then
																													v181 = 0;
																													v182 = nil;
																													v180 = 1;
																												end
																												if (v180 == 1) then
																													while true do
																														if (v181 == 0) then
																															v182 = v122[1067 - (68 + 997)];
																															v120[v182](v120[v182 + (1271 - (226 + 1044))]);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																									elseif (v123 <= 5) then
																										if (v123 > 4) then
																											local v183 = 0;
																											local v184;
																											local v185;
																											local v186;
																											while true do
																												if (v183 == 1) then
																													v186 = nil;
																													while true do
																														if (v184 == 0) then
																															local v584 = 0;
																															while true do
																																if (v584 == 0) then
																																	v185 = v122[2];
																																	v186 = v120[v122[3]];
																																	v584 = 1;
																																end
																																if (1 == v584) then
																																	v184 = 1;
																																	break;
																																end
																															end
																														end
																														if (v184 == 1) then
																															v120[v185 + 1] = v186;
																															v120[v185] = v186[v122[4]];
																															break;
																														end
																													end
																													break;
																												end
																												if (v183 == 0) then
																													v184 = 0;
																													v185 = nil;
																													v183 = 1;
																												end
																											end
																										else
																											local v187 = 0;
																											local v188;
																											local v189;
																											local v190;
																											while true do
																												if (v187 == 0) then
																													v188 = v111[v122[3]];
																													v189 = nil;
																													v187 = 1;
																												end
																												if (v187 == 2) then
																													for v526 = 1 + 0, v122[4] do
																														local v527 = 0;
																														local v528;
																														while true do
																															if (v527 == 0) then
																																v114 = v114 + 1;
																																v528 = v110[v114];
																																v527 = 1;
																															end
																															if (1 == v527) then
																																if (v528[1] == 120) then
																																	v190[v526 - 1] = {v120,v528[1 + 2]};
																																else
																																	v190[v526 - (958 - (892 + 65))] = {v62,v528[3]};
																																end
																																v119[#v119 + 1] = v190;
																																break;
																															end
																														end
																													end
																													v120[v122[2]] = v43(v188, v189, v63);
																													break;
																												end
																												if (v187 == 1) then
																													v190 = {};
																													v189 = v18({}, {[v7("\247\187\200\14\189\58\41", "\168\228\161\96\217\95\81")]=function(v529, v530)
																														local v531 = 0;
																														local v532;
																														while true do
																															if (0 == v531) then
																																v532 = v190[v530];
																																return v532[1][v532[2]];
																															end
																														end
																													end,[v7("\104\228\223\43\75\38\89\223\212\54", "\55\187\177\78\60\79")]=function(v533, v534, v535)
																														local v536 = 0;
																														local v537;
																														while true do
																															if (v536 == 0) then
																																v537 = v190[v534];
																																v537[4 - 3][v537[119 - (32 + 85)]] = v535;
																																break;
																															end
																														end
																													end});
																													v187 = 2;
																												end
																											end
																										end
																									elseif (v123 == 6) then
																										v120[v122[2]] = v122[3] / v120[v122[9 - 5]];
																									else
																										local v192 = 0;
																										local v193;
																										while true do
																											if (v192 == 0) then
																												v193 = v122[2];
																												v120[v193] = v120[v193](v21(v120, v193 + 1, v122[3]));
																												break;
																											end
																										end
																									end
																								elseif (v123 <= 11) then
																									if (v123 <= 9) then
																										if (v123 > 8) then
																											v120[v122[3 - 1]][v120[v122[3]]] = v120[v122[4]];
																										else
																											local v196 = 0;
																											local v197;
																											while true do
																												if (v196 == 0) then
																													v197 = v122[2];
																													do
																														return v21(v120, v197, v115);
																													end
																													break;
																												end
																											end
																										end
																									elseif (v123 > (18 - 8)) then
																										local v198 = 0;
																										local v199;
																										local v200;
																										local v201;
																										local v202;
																										while true do
																											if (v198 == 0) then
																												v199 = 0;
																												v200 = nil;
																												v198 = 1;
																											end
																											if (v198 == 1) then
																												v201 = nil;
																												v202 = nil;
																												v198 = 2;
																											end
																											if (2 == v198) then
																												while true do
																													if (0 == v199) then
																														local v588 = 0;
																														while true do
																															if (v588 == 0) then
																																v200 = v122[2];
																																v201 = {v120[v200](v120[v200 + (351 - (87 + 263))])};
																																v588 = 1;
																															end
																															if (1 == v588) then
																																v199 = 1;
																																break;
																															end
																														end
																													end
																													if (v199 == 1) then
																														v202 = 0;
																														for v634 = v200, v122[4] do
																															local v635 = 0;
																															while true do
																																if (v635 == 0) then
																																	v202 = v202 + 1;
																																	v120[v634] = v201[v202];
																																	break;
																																end
																															end
																														end
																														break;
																													end
																												end
																												break;
																											end
																										end
																									else
																										v120[v122[2]][v120[v122[3]]] = v120[v122[4]];
																									end
																								elseif (v123 <= 13) then
																									if (v123 > 12) then
																										v120[v122[182 - (67 + 113)]] = v63[v122[3 + 0]];
																									else
																										local v207 = 0;
																										local v208;
																										local v209;
																										while true do
																											if (v207 == 0) then
																												v208 = 0;
																												v209 = nil;
																												v207 = 1;
																											end
																											if (v207 == 1) then
																												while true do
																													if (v208 == 0) then
																														v209 = v122[2];
																														v120[v209](v120[v209 + 1]);
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																								elseif (v123 <= (34 - 20)) then
																									local v210 = 0;
																									local v211;
																									while true do
																										if (v210 == 0) then
																											v211 = v122[2];
																											do
																												return v120[v211](v21(v120, v211 + 1, v122[3]));
																											end
																											break;
																										end
																									end
																								elseif (v123 > 15) then
																									do
																										return v120[v122[2]];
																									end
																								else
																									local v415 = 0;
																									local v416;
																									while true do
																										if (v415 == 0) then
																											v416 = v122[2 + 0];
																											do
																												return v21(v120, v416, v115);
																											end
																											break;
																										end
																									end
																								end
																							elseif (v123 <= 25) then
																								if (v123 <= 20) then
																									if (v123 <= 18) then
																										if (v123 > (67 - 50)) then
																											v120[v122[954 - (802 + 150)]] = not v120[v122[3]];
																										else
																											local v213 = 0;
																											local v214;
																											local v215;
																											local v216;
																											while true do
																												if (v213 == 1) then
																													v216 = 0 - 0;
																													for v538 = v214, v122[4] do
																														local v539 = 0;
																														local v540;
																														while true do
																															if (v539 == 0) then
																																v540 = 0;
																																while true do
																																	if (v540 == 0) then
																																		v216 = v216 + 1;
																																		v120[v538] = v215[v216];
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v213 == 0) then
																													v214 = v122[2];
																													v215 = {v120[v214](v21(v120, v214 + (2 - 1), v122[3]))};
																													v213 = 1;
																												end
																											end
																										end
																									elseif (v123 > (14 + 5)) then
																										local v217 = 0;
																										local v218;
																										local v219;
																										while true do
																											if (1 == v217) then
																												v120[v218 + 1] = v219;
																												v120[v218] = v219[v122[4]];
																												break;
																											end
																											if (0 == v217) then
																												v218 = v122[2];
																												v219 = v120[v122[3]];
																												v217 = 1;
																											end
																										end
																									else
																										v120[v122[2]] = v120[v122[1000 - (915 + 82)]] % v122[11 - 7];
																									end
																								elseif (v123 <= 22) then
																									if (v123 > 21) then
																										local v221 = 0;
																										local v222;
																										local v223;
																										while true do
																											if (v221 == 1) then
																												v120[v222 + 1] = v223;
																												v120[v222] = v223[v120[v122[4]]];
																												break;
																											end
																											if (v221 == 0) then
																												v222 = v122[2];
																												v223 = v120[v122[3]];
																												v221 = 1;
																											end
																										end
																									else
																										local v224 = 0;
																										local v225;
																										while true do
																											if (0 == v224) then
																												v225 = v120[v122[4]];
																												if v225 then
																													v114 = v114 + 1;
																												else
																													local v572 = 0;
																													local v573;
																													while true do
																														if (v572 == 0) then
																															v573 = 0;
																															while true do
																																if (0 == v573) then
																																	v120[v122[2]] = v225;
																																	v114 = v122[3];
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																									end
																								elseif (v123 <= 23) then
																									if (v120[v122[2]] == v120[v122[4]]) then
																										v114 = v114 + 1;
																									else
																										v114 = v122[3];
																									end
																								elseif (v123 > 24) then
																									local v418 = 0;
																									local v419;
																									local v420;
																									local v421;
																									local v422;
																									while true do
																										if (v418 == 0) then
																											v419 = 0;
																											v420 = nil;
																											v418 = 1;
																										end
																										if (v418 == 1) then
																											v421 = nil;
																											v422 = nil;
																											v418 = 2;
																										end
																										if (v418 == 2) then
																											while true do
																												if (v419 == 0) then
																													local v663 = 0;
																													while true do
																														if (1 == v663) then
																															v419 = 1;
																															break;
																														end
																														if (v663 == 0) then
																															v420 = v122[2];
																															v421 = v120[v420 + 2];
																															v663 = 1;
																														end
																													end
																												end
																												if (v419 == 2) then
																													if (v421 > (0 + 0)) then
																														if (v422 <= v120[v420 + 1]) then
																															local v772 = 0;
																															local v773;
																															while true do
																																if (v772 == 0) then
																																	v773 = 0;
																																	while true do
																																		if (v773 == 0) then
																																			v114 = v122[3];
																																			v120[v420 + 3] = v422;
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v422 >= v120[v420 + 1]) then
																														local v774 = 0;
																														while true do
																															if (v774 == 0) then
																																v114 = v122[3];
																																v120[v420 + 3] = v422;
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v419 == 1) then
																													local v664 = 0;
																													while true do
																														if (v664 == 1) then
																															v419 = 2;
																															break;
																														end
																														if (v664 == 0) then
																															v422 = v120[v420] + v421;
																															v120[v420] = v422;
																															v664 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								else
																									local v423 = 0;
																									local v424;
																									local v425;
																									local v426;
																									local v427;
																									while true do
																										if (v423 == 2) then
																											while true do
																												if (v424 == 1) then
																													local v665 = 0;
																													while true do
																														if (v665 == 1) then
																															v424 = 2;
																															break;
																														end
																														if (v665 == 0) then
																															v427 = v120[v425] + v426;
																															v120[v425] = v427;
																															v665 = 1;
																														end
																													end
																												end
																												if (2 == v424) then
																													if (v426 > 0) then
																														if (v427 <= v120[v425 + 1]) then
																															local v775 = 0;
																															local v776;
																															while true do
																																if (0 == v775) then
																																	v776 = 0;
																																	while true do
																																		if (v776 == 0) then
																																			v114 = v122[3];
																																			v120[v425 + (3 - 0)] = v427;
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v427 >= v120[v425 + 1]) then
																														local v777 = 0;
																														while true do
																															if (v777 == 0) then
																																v114 = v122[1190 - (1069 + 118)];
																																v120[v425 + (6 - 3)] = v427;
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (0 == v424) then
																													local v666 = 0;
																													while true do
																														if (1 == v666) then
																															v424 = 1;
																															break;
																														end
																														if (v666 == 0) then
																															v425 = v122[2];
																															v426 = v120[v425 + 2];
																															v666 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (v423 == 1) then
																											v426 = nil;
																											v427 = nil;
																											v423 = 2;
																										end
																										if (v423 == 0) then
																											v424 = 0;
																											v425 = nil;
																											v423 = 1;
																										end
																									end
																								end
																							elseif (v123 <= 29) then
																								if (v123 <= 27) then
																									if (v123 == 26) then
																										if (v120[v122[2]] <= v122[4]) then
																											v114 = v114 + (1 - 0);
																										else
																											v114 = v122[3];
																										end
																									elseif (v120[v122[1 + 1]] <= v122[4]) then
																										v114 = v114 + 1;
																									else
																										v114 = v122[3];
																									end
																								elseif (v123 == 28) then
																									local v226 = 0;
																									local v227;
																									local v228;
																									local v229;
																									while true do
																										if (v226 == 0) then
																											v227 = 0;
																											v228 = nil;
																											v226 = 1;
																										end
																										if (v226 == 1) then
																											v229 = nil;
																											while true do
																												if (v227 == 1) then
																													for v636 = 1, #v119 do
																														local v637 = 0;
																														local v638;
																														while true do
																															if (0 == v637) then
																																v638 = v119[v636];
																																for v755 = 0, #v638 do
																																	local v756 = 0;
																																	local v757;
																																	local v758;
																																	local v759;
																																	local v760;
																																	while true do
																																		if (2 == v756) then
																																			while true do
																																				if (v757 == 1) then
																																					v760 = v758[2];
																																					if ((v759 == v120) and (v760 >= v228)) then
																																						local v811 = 0;
																																						local v812;
																																						while true do
																																							if (0 == v811) then
																																								v812 = 0;
																																								while true do
																																									if (v812 == 0) then
																																										v229[v760] = v759[v760];
																																										v758[1 - 0] = v229;
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																					break;
																																				end
																																				if (v757 == 0) then
																																					local v806 = 0;
																																					while true do
																																						if (0 == v806) then
																																							v758 = v638[v755];
																																							v759 = v758[1];
																																							v806 = 1;
																																						end
																																						if (v806 == 1) then
																																							v757 = 1;
																																							break;
																																						end
																																					end
																																				end
																																			end
																																			break;
																																		end
																																		if (v756 == 1) then
																																			v759 = nil;
																																			v760 = nil;
																																			v756 = 2;
																																		end
																																		if (v756 == 0) then
																																			v757 = 0;
																																			v758 = nil;
																																			v756 = 1;
																																		end
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v227 == 0) then
																													local v590 = 0;
																													while true do
																														if (0 == v590) then
																															v228 = v122[2];
																															v229 = {};
																															v590 = 1;
																														end
																														if (v590 == 1) then
																															v227 = 1;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								else
																									v120[v122[2 + 0]] = {};
																								end
																							elseif (v123 <= 31) then
																								if (v123 == 30) then
																									local v231 = 0;
																									local v232;
																									local v233;
																									local v234;
																									local v235;
																									while true do
																										if (v231 == 2) then
																											while true do
																												if (v232 == 1) then
																													v235 = 791 - (368 + 423);
																													for v639 = v233, v122[4] do
																														local v640 = 0;
																														local v641;
																														while true do
																															if (v640 == 0) then
																																v641 = 0;
																																while true do
																																	if (v641 == 0) then
																																		v235 = v235 + 1;
																																		v120[v639] = v234[v235];
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (0 == v232) then
																													local v591 = 0;
																													while true do
																														if (v591 == 0) then
																															v233 = v122[2];
																															v234 = {v120[v233](v21(v120, v233 + 1, v115))};
																															v591 = 1;
																														end
																														if (v591 == 1) then
																															v232 = 1;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (v231 == 0) then
																											v232 = 0;
																											v233 = nil;
																											v231 = 1;
																										end
																										if (v231 == 1) then
																											v234 = nil;
																											v235 = nil;
																											v231 = 2;
																										end
																									end
																								else
																									do
																										return;
																									end
																								end
																							elseif (v123 <= 32) then
																								v120[v122[6 - 4]] = not v120[v122[3]];
																							elseif (v123 == 33) then
																								local v430 = 0;
																								local v431;
																								while true do
																									if (v430 == 0) then
																										v431 = v122[2];
																										do
																											return v120[v431](v21(v120, v431 + 1, v122[3]));
																										end
																										break;
																									end
																								end
																							else
																								for v500 = v122[2], v122[3] do
																									v120[v500] = nil;
																								end
																							end
																						elseif (v123 <= 51) then
																							if (v123 <= 42) then
																								if (v123 <= 38) then
																									if (v123 <= 36) then
																										if (v123 == 35) then
																											if (v120[v122[2]] ~= v122[4]) then
																												v114 = v114 + 1;
																											else
																												v114 = v122[3];
																											end
																										else
																											local v237 = 0;
																											local v238;
																											while true do
																												if (v237 == 0) then
																													v238 = v122[2];
																													v120[v238] = v120[v238](v21(v120, v238 + (19 - (10 + 8)), v115));
																													break;
																												end
																											end
																										end
																									elseif (v123 > 37) then
																										local v239 = 0;
																										local v240;
																										local v241;
																										local v242;
																										while true do
																											if (v239 == 1) then
																												v242 = nil;
																												while true do
																													if (v240 == 0) then
																														local v592 = 0;
																														while true do
																															if (v592 == 1) then
																																v240 = 1;
																																break;
																															end
																															if (v592 == 0) then
																																v241 = v122[2];
																																v242 = v120[v122[3]];
																																v592 = 1;
																															end
																														end
																													end
																													if (v240 == 1) then
																														v120[v241 + 1] = v242;
																														v120[v241] = v242[v120[v122[4]]];
																														break;
																													end
																												end
																												break;
																											end
																											if (v239 == 0) then
																												v240 = 0;
																												v241 = nil;
																												v239 = 1;
																											end
																										end
																									else
																										do
																											return;
																										end
																									end
																								elseif (v123 <= 40) then
																									if (v123 == 39) then
																										local v243 = 0;
																										local v244;
																										local v245;
																										local v246;
																										while true do
																											if (v243 == 1) then
																												v246 = nil;
																												while true do
																													if (v244 == 1) then
																														for v642 = v245 + 1, v122[3] do
																															v15(v246, v120[v642]);
																														end
																														break;
																													end
																													if (v244 == 0) then
																														local v596 = 0;
																														while true do
																															if (v596 == 0) then
																																v245 = v122[2];
																																v246 = v120[v245];
																																v596 = 1;
																															end
																															if (v596 == 1) then
																																v244 = 1;
																																break;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (v243 == 0) then
																												v244 = 0;
																												v245 = nil;
																												v243 = 1;
																											end
																										end
																									else
																										v63[v122[3]] = v120[v122[2]];
																									end
																								elseif (v123 > 41) then
																									for v409 = v122[2], v122[3] do
																										v120[v409] = nil;
																									end
																								else
																									local v249 = 0;
																									local v250;
																									while true do
																										if (v249 == 0) then
																											v250 = v122[2];
																											do
																												return v21(v120, v250, v250 + v122[3]);
																											end
																											break;
																										end
																									end
																								end
																							elseif (v123 <= 46) then
																								if (v123 <= 44) then
																									if (v123 > (165 - 122)) then
																										local v251 = 0;
																										local v252;
																										while true do
																											if (v251 == 0) then
																												v252 = v120[v122[4]];
																												if not v252 then
																													v114 = v114 + 1;
																												else
																													local v575 = 0;
																													while true do
																														if (v575 == 0) then
																															v120[v122[2]] = v252;
																															v114 = v122[3];
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																									else
																										local v253 = 0;
																										local v254;
																										local v255;
																										local v256;
																										local v257;
																										local v258;
																										while true do
																											if (v253 == 0) then
																												v254 = 0;
																												v255 = nil;
																												v253 = 1;
																											end
																											if (v253 == 2) then
																												v258 = nil;
																												while true do
																													if (v254 == 1) then
																														local v597 = 0;
																														while true do
																															if (v597 == 0) then
																																v115 = (v257 + v255) - 1;
																																v258 = 0;
																																v597 = 1;
																															end
																															if (1 == v597) then
																																v254 = 2;
																																break;
																															end
																														end
																													end
																													if (v254 == 2) then
																														for v643 = v255, v115 do
																															local v644 = 0;
																															while true do
																																if (0 == v644) then
																																	v258 = v258 + 1;
																																	v120[v643] = v256[v258];
																																	break;
																																end
																															end
																														end
																														break;
																													end
																													if (v254 == 0) then
																														local v598 = 0;
																														while true do
																															if (v598 == 0) then
																																v255 = v122[2];
																																v256, v257 = v113(v120[v255](v21(v120, v255 + 1, v122[3])));
																																v598 = 1;
																															end
																															if (v598 == 1) then
																																v254 = 1;
																																break;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (v253 == 1) then
																												v256 = nil;
																												v257 = nil;
																												v253 = 2;
																											end
																										end
																									end
																								elseif (v123 > 45) then
																									v62[v122[3]] = v120[v122[2]];
																								else
																									local v261 = 0;
																									local v262;
																									while true do
																										if (0 == v261) then
																											v262 = v122[2];
																											v120[v262] = v120[v262](v120[v262 + 1]);
																											break;
																										end
																									end
																								end
																							elseif (v123 <= 48) then
																								if (v123 == 47) then
																									local v263 = 0;
																									local v264;
																									local v265;
																									while true do
																										if (v263 == 0) then
																											v264 = 0;
																											v265 = nil;
																											v263 = 1;
																										end
																										if (v263 == 1) then
																											while true do
																												if (v264 == 0) then
																													v265 = v122[2];
																													v120[v265](v21(v120, v265 + 1, v115));
																													break;
																												end
																											end
																											break;
																										end
																									end
																								else
																									v120[v122[2]] = v120[v122[3]] + v120[v122[446 - (416 + 26)]];
																								end
																							elseif (v123 <= 49) then
																								v120[v122[2]] = v120[v122[3]] + v122[4];
																							elseif (v123 > 50) then
																								v120[v122[2]] = v122[3] + v120[v122[12 - 8]];
																							else
																								local v434 = 0;
																								local v435;
																								local v436;
																								local v437;
																								while true do
																									if (v434 == 1) then
																										v437 = v122[3];
																										for v600 = 1, v437 do
																											v436[v600] = v120[v435 + v600];
																										end
																										break;
																									end
																									if (v434 == 0) then
																										v435 = v122[2];
																										v436 = v120[v435];
																										v434 = 1;
																									end
																								end
																							end
																						elseif (v123 <= 60) then
																							if (v123 <= (24 + 31)) then
																								if (v123 <= 53) then
																									if (v123 == 52) then
																										local v268 = 0;
																										local v269;
																										local v270;
																										while true do
																											if (v268 == 1) then
																												while true do
																													if (v269 == 0) then
																														v270 = v120[v122[6 - 2]];
																														if v270 then
																															v114 = v114 + 1;
																														else
																															local v669 = 0;
																															while true do
																																if (v669 == 0) then
																																	v120[v122[440 - (145 + 293)]] = v270;
																																	v114 = v122[3];
																																	break;
																																end
																															end
																														end
																														break;
																													end
																												end
																												break;
																											end
																											if (v268 == 0) then
																												v269 = 0;
																												v270 = nil;
																												v268 = 1;
																											end
																										end
																									else
																										local v271 = 0;
																										local v272;
																										local v273;
																										local v274;
																										while true do
																											if (v271 == 1) then
																												v274 = 0;
																												for v541 = v272, v122[4] do
																													local v542 = 0;
																													local v543;
																													while true do
																														if (v542 == 0) then
																															v543 = 0;
																															while true do
																																if (v543 == 0) then
																																	v274 = v274 + (431 - (44 + 386));
																																	v120[v541] = v273[v274];
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																											if (v271 == 0) then
																												v272 = v122[2];
																												v273 = {v120[v272](v21(v120, v272 + 1, v122[3]))};
																												v271 = 1;
																											end
																										end
																									end
																								elseif (v123 > 54) then
																									if (v120[v122[2]] ~= v122[4]) then
																										v114 = v114 + 1;
																									else
																										v114 = v122[3];
																									end
																								else
																									do
																										return v120[v122[1488 - (998 + 488)]];
																									end
																								end
																							elseif (v123 <= 57) then
																								if (v123 == 56) then
																									local v275 = 0;
																									local v276;
																									local v277;
																									while true do
																										if (v275 == 1) then
																											while true do
																												if (v276 == 0) then
																													v277 = v120[v122[4]];
																													if not v277 then
																														v114 = v114 + 1;
																													else
																														local v670 = 0;
																														while true do
																															if (0 == v670) then
																																v120[v122[2]] = v277;
																																v114 = v122[3];
																																break;
																															end
																														end
																													end
																													break;
																												end
																											end
																											break;
																										end
																										if (v275 == 0) then
																											v276 = 0;
																											v277 = nil;
																											v275 = 1;
																										end
																									end
																								else
																									v120[v122[2]] = v120[v122[3]] - v122[4];
																								end
																							elseif (v123 <= (19 + 39)) then
																								local v279 = 0;
																								local v280;
																								local v281;
																								local v282;
																								local v283;
																								local v284;
																								while true do
																									if (v279 == 0) then
																										v280 = v122[2 + 0];
																										v281 = v122[4];
																										v279 = 1;
																									end
																									if (v279 == 2) then
																										for v544 = 1, v281 do
																											v120[v282 + v544] = v283[v544];
																										end
																										v284 = v283[1];
																										v279 = 3;
																									end
																									if (1 == v279) then
																										v282 = v280 + 2;
																										v283 = {v120[v280](v120[v280 + 1], v120[v282])};
																										v279 = 2;
																									end
																									if (v279 == 3) then
																										if v284 then
																											local v579 = 0;
																											while true do
																												if (v579 == 0) then
																													v120[v282] = v284;
																													v114 = v122[3];
																													break;
																												end
																											end
																										else
																											v114 = v114 + 1;
																										end
																										break;
																									end
																								end
																							elseif (v123 == 59) then
																								v120[v122[2]] = v120[v122[3]][v120[v122[4]]];
																							else
																								local v441 = 0;
																								local v442;
																								local v443;
																								local v444;
																								while true do
																									if (v441 == 1) then
																										v444 = nil;
																										while true do
																											if (v442 == 1) then
																												for v692 = v443 + (1139 - (116 + 1022)), v115 do
																													v15(v444, v120[v692]);
																												end
																												break;
																											end
																											if (v442 == 0) then
																												local v673 = 0;
																												while true do
																													if (v673 == 0) then
																														v443 = v122[774 - (201 + 571)];
																														v444 = v120[v443];
																														v673 = 1;
																													end
																													if (v673 == 1) then
																														v442 = 1;
																														break;
																													end
																												end
																											end
																										end
																										break;
																									end
																									if (0 == v441) then
																										v442 = 0;
																										v443 = nil;
																										v441 = 1;
																									end
																								end
																							end
																						elseif (v123 <= 64) then
																							if (v123 <= 62) then
																								if (v123 == 61) then
																									if v120[v122[2]] then
																										v114 = v114 + 1;
																									else
																										v114 = v122[3];
																									end
																								else
																									v120[v122[2]] = v43(v111[v122[3]], nil, v63);
																								end
																							elseif (v123 > 63) then
																								v120[v122[8 - 6]] = v120[v122[3]][v122[4]];
																							else
																								v120[v122[2 + 0]] = v120[v122[3]];
																							end
																						elseif (v123 <= 66) then
																							if (v123 > 65) then
																								v120[v122[2]][v122[3]] = v120[v122[4]];
																							else
																								v63[v122[3]] = v120[v122[2]];
																							end
																						elseif (v123 <= 67) then
																							v120[v122[2]] = v122[3] ~= 0;
																						elseif (v123 > 68) then
																							local v446 = 0;
																							local v447;
																							local v448;
																							local v449;
																							local v450;
																							while true do
																								if (v446 == 2) then
																									while true do
																										if (v447 == 1) then
																											v450 = v122[3];
																											for v693 = 1, v450 do
																												v449[v693] = v120[v448 + v693];
																											end
																											break;
																										end
																										if (v447 == 0) then
																											local v675 = 0;
																											while true do
																												if (0 == v675) then
																													v448 = v122[2];
																													v449 = v120[v448];
																													v675 = 1;
																												end
																												if (v675 == 1) then
																													v447 = 1;
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																								if (v446 == 1) then
																									v449 = nil;
																									v450 = nil;
																									v446 = 2;
																								end
																								if (0 == v446) then
																									v447 = 0;
																									v448 = nil;
																									v446 = 1;
																								end
																							end
																						else
																							v120[v122[2]] = v63[v122[3]];
																						end
																					elseif (v123 <= (379 - 275)) then
																						if (v123 <= 86) then
																							if (v123 <= 77) then
																								if (v123 <= 73) then
																									if (v123 <= 71) then
																										if (v123 > 70) then
																											v120[v122[2]] = v120[v122[3]] + v122[4];
																										else
																											v120[v122[7 - 5]] = v120[v122[3]][v120[v122[4]]];
																										end
																									elseif (v123 > 72) then
																										v62[v122[3]] = v120[v122[2]];
																									else
																										v114 = v122[3];
																									end
																								elseif (v123 <= 75) then
																									if (v123 == 74) then
																										local v301 = 0;
																										local v302;
																										local v303;
																										local v304;
																										while true do
																											if (v301 == 1) then
																												v304 = nil;
																												while true do
																													if (v302 == 0) then
																														local v605 = 0;
																														while true do
																															if (v605 == 0) then
																																v303 = v122[3];
																																v304 = v120[v303];
																																v605 = 1;
																															end
																															if (v605 == 1) then
																																v302 = 1;
																																break;
																															end
																														end
																													end
																													if (v302 == 1) then
																														for v645 = v303 + 1, v122[4] do
																															v304 = v304 .. v120[v645];
																														end
																														v120[v122[2]] = v304;
																														break;
																													end
																												end
																												break;
																											end
																											if (0 == v301) then
																												v302 = 0;
																												v303 = nil;
																												v301 = 1;
																											end
																										end
																									else
																										local v305 = 0;
																										local v306;
																										local v307;
																										while true do
																											if (v305 == 0) then
																												v306 = 0;
																												v307 = nil;
																												v305 = 1;
																											end
																											if (v305 == 1) then
																												while true do
																													if (v306 == 0) then
																														v307 = v122[861 - (814 + 45)];
																														v120[v307] = v120[v307]();
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																								elseif (v123 == (187 - 111)) then
																									local v308 = 0;
																									local v309;
																									local v310;
																									local v311;
																									local v312;
																									local v313;
																									while true do
																										if (v308 == 0) then
																											v309 = 0;
																											v310 = nil;
																											v308 = 1;
																										end
																										if (v308 == 2) then
																											v313 = nil;
																											while true do
																												if (v309 == 2) then
																													for v646 = v310, v115 do
																														local v647 = 0;
																														local v648;
																														while true do
																															if (0 == v647) then
																																v648 = 0;
																																while true do
																																	if (0 == v648) then
																																		v313 = v313 + 1;
																																		v120[v646] = v311[v313];
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v309 == 1) then
																													local v609 = 0;
																													while true do
																														if (v609 == 1) then
																															v309 = 2;
																															break;
																														end
																														if (v609 == 0) then
																															v115 = (v312 + v310) - 1;
																															v313 = 0;
																															v609 = 1;
																														end
																													end
																												end
																												if (v309 == 0) then
																													local v610 = 0;
																													while true do
																														if (v610 == 1) then
																															v309 = 1;
																															break;
																														end
																														if (v610 == 0) then
																															v310 = v122[2];
																															v311, v312 = v113(v120[v310](v21(v120, v310 + 1, v115)));
																															v610 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (v308 == 1) then
																											v311 = nil;
																											v312 = nil;
																											v308 = 2;
																										end
																									end
																								else
																									v120[v122[2]] = v122[3] ~= 0;
																								end
																							elseif (v123 <= (5 + 76)) then
																								if (v123 <= 79) then
																									if (v123 > (28 + 50)) then
																										v120[v122[2]] = v120[v122[888 - (261 + 624)]] % v120[v122[4]];
																									else
																										v120[v122[2]] = v62[v122[3]];
																									end
																								elseif (v123 > 80) then
																									v120[v122[2]] = v62[v122[3]];
																								elseif (v122[2] == v120[v122[6 - 2]]) then
																									v114 = v114 + 1;
																								else
																									v114 = v122[3];
																								end
																							elseif (v123 <= 83) then
																								if (v123 > 82) then
																									v120[v122[2]] = v120[v122[3]] * v120[v122[4]];
																								else
																									v120[v122[2]]();
																								end
																							elseif (v123 <= 84) then
																								v120[v122[2]] = v120[v122[3]][v122[4]];
																							elseif (v123 > 85) then
																								if (v120[v122[1082 - (1020 + 60)]] == v122[4]) then
																									v114 = v114 + 1;
																								else
																									v114 = v122[3];
																								end
																							else
																								v120[v122[2]][v120[v122[3]]] = v122[4];
																							end
																						elseif (v123 <= 95) then
																							if (v123 <= (1513 - (630 + 793))) then
																								if (v123 <= 88) then
																									if (v123 > 87) then
																										v120[v122[2]] = v120[v122[3]] - v120[v122[4]];
																									else
																										v120[v122[2]][v120[v122[3]]] = v122[4];
																									end
																								elseif (v123 > 89) then
																									if (v122[6 - 4] < v120[v122[4]]) then
																										v114 = v114 + 1;
																									else
																										v114 = v122[3];
																									end
																								else
																									local v326 = 0;
																									local v327;
																									local v328;
																									local v329;
																									local v330;
																									while true do
																										if (v326 == 1) then
																											v329 = nil;
																											v330 = nil;
																											v326 = 2;
																										end
																										if (v326 == 0) then
																											v327 = 0;
																											v328 = nil;
																											v326 = 1;
																										end
																										if (v326 == 2) then
																											while true do
																												if (2 == v327) then
																													for v649 = 4 - 3, v122[4] do
																														local v650 = 0;
																														local v651;
																														local v652;
																														while true do
																															if (v650 == 0) then
																																v651 = 0;
																																v652 = nil;
																																v650 = 1;
																															end
																															if (v650 == 1) then
																																while true do
																																	if (v651 == 1) then
																																		if (v652[1] == 120) then
																																			v330[v649 - 1] = {v120,v652[3]};
																																		else
																																			v330[v649 - 1] = {v62,v652[3]};
																																		end
																																		v119[#v119 + 1] = v330;
																																		break;
																																	end
																																	if (v651 == 0) then
																																		local v785 = 0;
																																		while true do
																																			if (v785 == 1) then
																																				v651 = 1;
																																				break;
																																			end
																																			if (v785 == 0) then
																																				v114 = v114 + 1;
																																				v652 = v110[v114];
																																				v785 = 1;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																														end
																													end
																													v120[v122[2]] = v43(v328, v329, v63);
																													break;
																												end
																												if (v327 == 1) then
																													local v612 = 0;
																													while true do
																														if (v612 == 1) then
																															v327 = 2;
																															break;
																														end
																														if (v612 == 0) then
																															v330 = {};
																															v329 = v18({}, {[v7("\191\18\199\81\239\67\215", "\224\77\174\63\139\38\175")]=function(v717, v718)
																																local v719 = 0;
																																local v720;
																																local v721;
																																while true do
																																	if (v719 == 1) then
																																		while true do
																																			if (v720 == 0) then
																																				local v800 = 0;
																																				while true do
																																					if (v800 == 0) then
																																						v721 = v330[v718];
																																						return v721[1][v721[2]];
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																	if (v719 == 0) then
																																		v720 = 0;
																																		v721 = nil;
																																		v719 = 1;
																																	end
																																end
																															end,[v7("\17\187\79\93\57\141\79\92\43\156", "\78\228\33\56")]=function(v722, v723, v724)
																																local v725 = 0;
																																local v726;
																																local v727;
																																while true do
																																	if (v725 == 0) then
																																		v726 = 0;
																																		v727 = nil;
																																		v725 = 1;
																																	end
																																	if (v725 == 1) then
																																		while true do
																																			if (v726 == 0) then
																																				v727 = v330[v723];
																																				v727[1][v727[2]] = v724;
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end});
																															v612 = 1;
																														end
																													end
																												end
																												if (v327 == 0) then
																													local v613 = 0;
																													while true do
																														if (v613 == 1) then
																															v327 = 1;
																															break;
																														end
																														if (v613 == 0) then
																															v328 = v111[v122[3]];
																															v329 = nil;
																															v613 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																							elseif (v123 <= 92) then
																								if (v123 > (36 + 55)) then
																									v120[v122[2]][v122[3]] = v122[4];
																								else
																									v120[v122[2]] = v120[v122[3]] / v120[v122[4]];
																								end
																							elseif (v123 <= 93) then
																								v120[v122[6 - 4]] = v120[v122[3]] * v120[v122[4]];
																							elseif (v123 == 94) then
																								local v457 = 0;
																								local v458;
																								local v459;
																								while true do
																									if (v457 == 0) then
																										v458 = 0;
																										v459 = nil;
																										v457 = 1;
																									end
																									if (v457 == 1) then
																										while true do
																											if (v458 == 0) then
																												v459 = v122[2];
																												v120[v459] = v120[v459](v21(v120, v459 + 1, v122[3]));
																												break;
																											end
																										end
																										break;
																									end
																								end
																							elseif (v122[2] == v120[v122[1751 - (760 + 987)]]) then
																								v114 = v114 + 1;
																							else
																								v114 = v122[1916 - (1789 + 124)];
																							end
																						elseif (v123 <= 99) then
																							if (v123 <= 97) then
																								if (v123 > 96) then
																									local v335 = 0;
																									local v336;
																									local v337;
																									local v338;
																									local v339;
																									while true do
																										if (0 == v335) then
																											v336 = v122[2];
																											v337, v338 = v113(v120[v336](v120[v336 + 1]));
																											v335 = 1;
																										end
																										if (v335 == 1) then
																											v115 = (v338 + v336) - 1;
																											v339 = 0;
																											v335 = 2;
																										end
																										if (v335 == 2) then
																											for v549 = v336, v115 do
																												local v550 = 0;
																												local v551;
																												while true do
																													if (0 == v550) then
																														v551 = 0;
																														while true do
																															if (v551 == 0) then
																																v339 = v339 + 1;
																																v120[v549] = v337[v339];
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																								else
																									v120[v122[768 - (745 + 21)]] = {};
																								end
																							elseif (v123 == 98) then
																								if (v122[2] <= v120[v122[4]]) then
																									v114 = v114 + 1;
																								else
																									v114 = v122[3];
																								end
																							else
																								local v341 = 0;
																								local v342;
																								local v343;
																								local v344;
																								while true do
																									if (v341 == 1) then
																										v344 = nil;
																										while true do
																											if (v342 == 0) then
																												local v614 = 0;
																												while true do
																													if (v614 == 0) then
																														v343 = v122[3];
																														v344 = v120[v343];
																														v614 = 1;
																													end
																													if (v614 == 1) then
																														v342 = 1;
																														break;
																													end
																												end
																											end
																											if (v342 == 1) then
																												for v653 = v343 + 1, v122[4] do
																													v344 = v344 .. v120[v653];
																												end
																												v120[v122[2]] = v344;
																												break;
																											end
																										end
																										break;
																									end
																									if (v341 == 0) then
																										v342 = 0;
																										v343 = nil;
																										v341 = 1;
																									end
																								end
																							end
																						elseif (v123 <= 101) then
																							if (v123 > 100) then
																								local v345 = 0;
																								local v346;
																								local v347;
																								local v348;
																								local v349;
																								local v350;
																								while true do
																									if (v345 == 0) then
																										v346 = v122[2];
																										v347 = v122[4];
																										v345 = 1;
																									end
																									if (v345 == 2) then
																										for v552 = 2 - 1, v347 do
																											v120[v348 + v552] = v349[v552];
																										end
																										v350 = v349[1];
																										v345 = 3;
																									end
																									if (v345 == 3) then
																										if v350 then
																											local v580 = 0;
																											local v581;
																											while true do
																												if (v580 == 0) then
																													v581 = 0;
																													while true do
																														if (0 == v581) then
																															v120[v348] = v350;
																															v114 = v122[11 - 8];
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											v114 = v114 + 1;
																										end
																										break;
																									end
																									if (v345 == 1) then
																										v348 = v346 + 2;
																										v349 = {v120[v346](v120[v346 + 1], v120[v348])};
																										v345 = 2;
																									end
																								end
																							elseif not v120[v122[2]] then
																								v114 = v114 + 1 + 0;
																							else
																								v114 = v122[3];
																							end
																						elseif (v123 <= 102) then
																							local v351 = 0;
																							local v352;
																							local v353;
																							while true do
																								if (v351 == 0) then
																									v352 = 0;
																									v353 = nil;
																									v351 = 1;
																								end
																								if (v351 == 1) then
																									while true do
																										if (v352 == 0) then
																											v353 = v122[2];
																											v120[v353] = v120[v353]();
																											break;
																										end
																									end
																									break;
																								end
																							end
																						elseif (v123 > 103) then
																							v120[v122[2]] = #v120[v122[3 + 0]];
																						else
																							v120[v122[2]] = #v120[v122[3]];
																						end
																					elseif (v123 <= 122) then
																						if (v123 <= 113) then
																							if (v123 <= 108) then
																								if (v123 <= 106) then
																									if (v123 > 105) then
																										local v354 = 0;
																										local v355;
																										while true do
																											if (0 == v354) then
																												v355 = v122[2];
																												v120[v355](v21(v120, v355 + 1, v115));
																												break;
																											end
																										end
																									else
																										local v356 = 0;
																										local v357;
																										while true do
																											if (v356 == 0) then
																												v357 = v122[2];
																												v120[v357] = v120[v357](v21(v120, v357 + 1, v115));
																												break;
																											end
																										end
																									end
																								elseif (v123 > 107) then
																									v120[v122[1057 - (87 + 968)]] = v122[3];
																								else
																									v120[v122[2]] = v120[v122[3]] - v120[v122[4]];
																								end
																							elseif (v123 <= 110) then
																								if (v123 == (479 - 370)) then
																									local v361 = 0;
																									local v362;
																									local v363;
																									local v364;
																									local v365;
																									while true do
																										if (v361 == 1) then
																											v115 = (v364 + v362) - 1;
																											v365 = 0;
																											v361 = 2;
																										end
																										if (v361 == 0) then
																											v362 = v122[2];
																											v363, v364 = v113(v120[v362](v21(v120, v362 + 1, v115)));
																											v361 = 1;
																										end
																										if (v361 == 2) then
																											for v555 = v362, v115 do
																												local v556 = 0;
																												local v557;
																												while true do
																													if (v556 == 0) then
																														v557 = 0;
																														while true do
																															if (v557 == 0) then
																																v365 = v365 + 1 + 0;
																																v120[v555] = v363[v365];
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																								else
																									v120[v122[2]] = v122[3] / v120[v122[4]];
																								end
																							elseif (v123 <= 111) then
																								local v367 = 0;
																								local v368;
																								local v369;
																								local v370;
																								while true do
																									if (v367 == 1) then
																										v370 = 0;
																										for v558 = v368, v122[4] do
																											local v559 = 0;
																											while true do
																												if (v559 == 0) then
																													v370 = v370 + 1;
																													v120[v558] = v369[v370];
																													break;
																												end
																											end
																										end
																										break;
																									end
																									if (v367 == 0) then
																										v368 = v122[2];
																										v369 = {v120[v368](v120[v368 + (2 - 1)])};
																										v367 = 1;
																									end
																								end
																							elseif (v123 > 112) then
																								v120[v122[2]] = v120[v122[3]] % v120[v122[4]];
																							else
																								v120[v122[1415 - (447 + 966)]][v122[3]] = v122[4];
																							end
																						elseif (v123 <= (320 - 203)) then
																							if (v123 <= 115) then
																								if (v123 > 114) then
																									local v371 = 0;
																									local v372;
																									while true do
																										if (v371 == 0) then
																											v372 = v122[2];
																											v120[v372](v21(v120, v372 + 1, v122[3]));
																											break;
																										end
																									end
																								else
																									v120[v122[2]] = v120[v122[1820 - (1703 + 114)]] + v120[v122[4]];
																								end
																							elseif (v123 == 116) then
																								local v374 = 0;
																								local v375;
																								local v376;
																								local v377;
																								while true do
																									if (v374 == 0) then
																										v375 = v122[703 - (376 + 325)];
																										v376 = v120[v375];
																										v374 = 1;
																									end
																									if (v374 == 1) then
																										v377 = v120[v375 + (2 - 0)];
																										if (v377 > 0) then
																											if (v376 > v120[v375 + 1]) then
																												v114 = v122[3];
																											else
																												v120[v375 + 3] = v376;
																											end
																										elseif (v376 < v120[v375 + 1]) then
																											v114 = v122[3];
																										else
																											v120[v375 + 3] = v376;
																										end
																										break;
																									end
																								end
																							else
																								v114 = v122[3];
																							end
																						elseif (v123 <= 119) then
																							if (v123 == 118) then
																								v120[v122[2]][v122[3]] = v120[v122[4]];
																							else
																								v120[v122[2]] = v120[v122[3]] * v122[4];
																							end
																						elseif (v123 <= 120) then
																							v120[v122[2]] = v120[v122[3]];
																						elseif (v123 == 121) then
																							local v467 = 0;
																							local v468;
																							local v469;
																							local v470;
																							local v471;
																							while true do
																								if (v467 == 1) then
																									v470 = nil;
																									v471 = nil;
																									v467 = 2;
																								end
																								if (v467 == 2) then
																									while true do
																										if (v468 == 0) then
																											local v678 = 0;
																											while true do
																												if (v678 == 0) then
																													v469 = v122[2];
																													v470 = {v120[v469](v21(v120, v469 + (2 - 1), v115))};
																													v678 = 1;
																												end
																												if (v678 == 1) then
																													v468 = 1;
																													break;
																												end
																											end
																										end
																										if (v468 == 1) then
																											v471 = 0;
																											for v702 = v469, v122[4] do
																												local v703 = 0;
																												while true do
																													if (v703 == 0) then
																														v471 = v471 + 1;
																														v120[v702] = v470[v471];
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																								if (v467 == 0) then
																									v468 = 0;
																									v469 = nil;
																									v467 = 1;
																								end
																							end
																						else
																							v120[v122[1 + 1]] = v120[v122[3]] * v122[4];
																						end
																					elseif (v123 <= 131) then
																						if (v123 <= 126) then
																							if (v123 <= 124) then
																								if (v123 == 123) then
																									v120[v122[4 - 2]] = v120[v122[3]] % v122[4];
																								else
																									v120[v122[2]] = v120[v122[3]] / v120[v122[4]];
																								end
																							elseif (v123 == 125) then
																								local v386 = 0;
																								local v387;
																								local v388;
																								while true do
																									if (v386 == 1) then
																										while true do
																											if (v387 == 0) then
																												v388 = v122[2];
																												v120[v388] = v120[v388](v120[v388 + 1]);
																												break;
																											end
																										end
																										break;
																									end
																									if (v386 == 0) then
																										v387 = 0;
																										v388 = nil;
																										v386 = 1;
																									end
																								end
																							else
																								local v389 = 0;
																								local v390;
																								local v391;
																								local v392;
																								local v393;
																								local v394;
																								while true do
																									if (v389 == 0) then
																										v390 = 0;
																										v391 = nil;
																										v389 = 1;
																									end
																									if (v389 == 1) then
																										v392 = nil;
																										v393 = nil;
																										v389 = 2;
																									end
																									if (v389 == 2) then
																										v394 = nil;
																										while true do
																											if (v390 == 1) then
																												local v620 = 0;
																												while true do
																													if (v620 == 0) then
																														v115 = (v393 + v391) - 1;
																														v394 = 0;
																														v620 = 1;
																													end
																													if (v620 == 1) then
																														v390 = 2;
																														break;
																													end
																												end
																											end
																											if (2 == v390) then
																												for v660 = v391, v115 do
																													local v661 = 0;
																													local v662;
																													while true do
																														if (v661 == 0) then
																															v662 = 0;
																															while true do
																																if (v662 == 0) then
																																	v394 = v394 + 1;
																																	v120[v660] = v392[v394];
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																											if (v390 == 0) then
																												local v621 = 0;
																												while true do
																													if (v621 == 0) then
																														v391 = v122[2];
																														v392, v393 = v113(v120[v391](v120[v391 + 1]));
																														v621 = 1;
																													end
																													if (v621 == 1) then
																														v390 = 1;
																														break;
																													end
																												end
																											end
																										end
																										break;
																									end
																								end
																							end
																						elseif (v123 <= 128) then
																							if (v123 > 127) then
																								if not v120[v122[2]] then
																									v114 = v114 + (15 - (9 + 5));
																								else
																									v114 = v122[3];
																								end
																							else
																								local v395 = 0;
																								local v396;
																								local v397;
																								while true do
																									if (v395 == 0) then
																										v396 = 0;
																										v397 = nil;
																										v395 = 1;
																									end
																									if (v395 == 1) then
																										while true do
																											if (0 == v396) then
																												v397 = v122[2];
																												v120[v397](v21(v120, v397 + 1, v122[3]));
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																						elseif (v123 <= 129) then
																							v120[v122[2]] = v120[v122[3]] - v122[4];
																						elseif (v123 > 130) then
																							if (v120[v122[2]] < v120[v122[4]]) then
																								v114 = v114 + 1;
																							else
																								v114 = v122[3];
																							end
																						elseif (v120[v122[2]] ~= v120[v122[4]]) then
																							v114 = v114 + 1;
																						else
																							v114 = v122[3];
																						end
																					elseif (v123 <= 135) then
																						if (v123 <= 133) then
																							if (v123 == 132) then
																								local v399 = 0;
																								local v400;
																								local v401;
																								local v402;
																								local v403;
																								while true do
																									if (v399 == 2) then
																										while true do
																											if (v400 == 0) then
																												local v623 = 0;
																												while true do
																													if (1 == v623) then
																														v400 = 1;
																														break;
																													end
																													if (0 == v623) then
																														v401 = v122[2];
																														v402 = v120[v401];
																														v623 = 1;
																													end
																												end
																											end
																											if (v400 == 1) then
																												v403 = v120[v401 + 2];
																												if (v403 > 0) then
																													if (v402 > v120[v401 + 1]) then
																														v114 = v122[3];
																													else
																														v120[v401 + 3] = v402;
																													end
																												elseif (v402 < v120[v401 + 1]) then
																													v114 = v122[3];
																												else
																													v120[v401 + 3] = v402;
																												end
																												break;
																											end
																										end
																										break;
																									end
																									if (v399 == 1) then
																										v402 = nil;
																										v403 = nil;
																										v399 = 2;
																									end
																									if (v399 == 0) then
																										v400 = 0;
																										v401 = nil;
																										v399 = 1;
																									end
																								end
																							elseif (v122[378 - (85 + 291)] <= v120[v122[4]]) then
																								v114 = v114 + 1;
																							else
																								v114 = v122[3];
																							end
																						elseif (v123 == 134) then
																							if (v120[v122[2]] == v120[v122[4]]) then
																								v114 = v114 + 1;
																							else
																								v114 = v122[1268 - (243 + 1022)];
																							end
																						else
																							local v404 = 0;
																							local v405;
																							local v406;
																							local v407;
																							local v408;
																							while true do
																								if (v404 == 1) then
																									v115 = (v407 + v405) - 1;
																									v408 = 0;
																									v404 = 2;
																								end
																								if (v404 == 0) then
																									v405 = v122[7 - 5];
																									v406, v407 = v113(v120[v405](v21(v120, v405 + 1, v122[3])));
																									v404 = 1;
																								end
																								if (v404 == 2) then
																									for v562 = v405, v115 do
																										local v563 = 0;
																										local v564;
																										while true do
																											if (v563 == 0) then
																												v564 = 0;
																												while true do
																													if (v564 == 0) then
																														v408 = v408 + 1;
																														v120[v562] = v406[v408];
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v123 <= 137) then
																						if (v123 == 136) then
																							if (v122[2] < v120[v122[4]]) then
																								v114 = v114 + 1;
																							else
																								v114 = v122[3];
																							end
																						else
																							v120[v122[2]]();
																						end
																					elseif (v123 <= 138) then
																						if (v120[v122[2]] == v122[4]) then
																							v114 = v114 + 1 + 0;
																						else
																							v114 = v122[3];
																						end
																					elseif (v123 == 139) then
																						v120[v122[2]] = v122[3] + v120[v122[4]];
																					else
																						local v479 = 0;
																						local v480;
																						local v481;
																						while true do
																							if (v479 == 1) then
																								for v625 = 1, #v119 do
																									local v626 = 0;
																									local v627;
																									while true do
																										if (0 == v626) then
																											v627 = v119[v625];
																											for v738 = 0, #v627 do
																												local v739 = 0;
																												local v740;
																												local v741;
																												local v742;
																												while true do
																													if (v739 == 1) then
																														v742 = v740[2];
																														if ((v741 == v120) and (v742 >= v480)) then
																															local v797 = 0;
																															local v798;
																															while true do
																																if (v797 == 0) then
																																	v798 = 0;
																																	while true do
																																		if (v798 == 0) then
																																			v481[v742] = v741[v742];
																																			v740[1] = v481;
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														break;
																													end
																													if (v739 == 0) then
																														v740 = v627[v738];
																														v741 = v740[1];
																														v739 = 1;
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																								break;
																							end
																							if (v479 == 0) then
																								v480 = v122[2];
																								v481 = {};
																								v479 = 1;
																							end
																						end
																					end
																					v114 = v114 + 1;
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
															if (v109 == 2) then
																v118 = v20("#", ...) - 1;
																v119 = {};
																v120 = {};
																for v133 = 0, v118 do
																	if (v133 >= v112) then
																		v116[v133 - v112] = v117[v133 + 1];
																	else
																		v120[v133] = v117[v133 + 1];
																	end
																end
																v109 = 3;
															end
															if (1 == v109) then
																v114 = 1;
																v115 = -1;
																v116 = {};
																v117 = {...};
																v109 = 2;
															end
															if (v109 == 0) then
																v110 = v65;
																v111 = v66;
																v112 = v67;
																v113 = v41;
																v109 = 1;
															end
														end
													end;
												end
												if (0 == v64) then
													v65 = v61[1638 - (1523 + 114)];
													v66 = v61[2];
													v64 = 1;
												end
											end
										end
										return v43(v42(), {}, v29)(...);
									end
								end
							end
							if (v31 == 6) then
								local v49 = 0;
								while true do
									if (v49 == 1) then
										v43 = nil;
										v31 = 7;
										break;
									end
									if (v49 == 0) then
										v42 = nil;
										function v42()
											local v68 = 0;
											local v69;
											local v70;
											local v71;
											local v72;
											local v73;
											local v74;
											local v75;
											while true do
												if (v68 == 2) then
													v73 = nil;
													v74 = nil;
													v68 = 3;
												end
												if (v68 == 3) then
													v75 = nil;
													while true do
														local v124 = 0;
														while true do
															if (v124 == 0) then
																if (v69 == 1) then
																	local v135 = 0;
																	while true do
																		if (v135 == 0) then
																			v74 = v37();
																			v75 = {};
																			v135 = 1;
																		end
																		if (v135 == 1) then
																			for v150 = 1, v74 do
																				local v151 = 0;
																				local v152;
																				local v153;
																				local v154;
																				while true do
																					if (v151 == 1) then
																						v154 = nil;
																						while true do
																							if (v152 == 1) then
																								if (v153 == 1) then
																									v154 = v35() ~= 0;
																								elseif (v153 == 2) then
																									v154 = v38();
																								elseif (v153 == (622 - (555 + 64))) then
																									v154 = v39();
																								end
																								v75[v150] = v154;
																								break;
																							end
																							if (v152 == 0) then
																								local v169 = 0;
																								while true do
																									if (v169 == 0) then
																										v153 = v35();
																										v154 = nil;
																										v169 = 1;
																									end
																									if (v169 == 1) then
																										v152 = 1;
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																					if (0 == v151) then
																						v152 = 0;
																						v153 = nil;
																						v151 = 1;
																					end
																				end
																			end
																			v73[934 - (857 + 74)] = v35();
																			v135 = 2;
																		end
																		if (v135 == 2) then
																			v69 = 2;
																			break;
																		end
																	end
																end
																if (v69 == 2) then
																	local v136 = 0;
																	while true do
																		if (0 == v136) then
																			for v155 = 1, v37() do
																				local v156 = 0;
																				local v157;
																				local v158;
																				while true do
																					if (v156 == 1) then
																						while true do
																							if (v157 == 0) then
																								v158 = v35();
																								if (v34(v158, 569 - (367 + 201), 1) == 0) then
																									local v170 = 0;
																									local v171;
																									local v172;
																									local v173;
																									local v174;
																									while true do
																										if (v170 == 1) then
																											v173 = nil;
																											v174 = nil;
																											v170 = 2;
																										end
																										if (v170 == 2) then
																											while true do
																												if (v171 == 0) then
																													local v175 = 0;
																													while true do
																														if (v175 == 1) then
																															v171 = 1;
																															break;
																														end
																														if (v175 == 0) then
																															v172 = v34(v158, 2, 930 - (214 + 713));
																															v173 = v34(v158, 4, 6);
																															v175 = 1;
																														end
																													end
																												end
																												if (2 == v171) then
																													local v176 = 0;
																													while true do
																														if (v176 == 0) then
																															if (v34(v173, 1, 1) == 1) then
																																v174[2] = v75[v174[2]];
																															end
																															if (v34(v173, 2, 2) == 1) then
																																v174[3] = v75[v174[3]];
																															end
																															v176 = 1;
																														end
																														if (1 == v176) then
																															v171 = 3;
																															break;
																														end
																													end
																												end
																												if (v171 == 1) then
																													local v177 = 0;
																													while true do
																														if (v177 == 0) then
																															v174 = {v36(),v36(),nil,nil};
																															if (v172 == 0) then
																																local v569 = 0;
																																local v570;
																																while true do
																																	if (v569 == 0) then
																																		v570 = 0;
																																		while true do
																																			if (0 == v570) then
																																				v174[3] = v36();
																																				v174[4] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v172 == 1) then
																																v174[3] = v37();
																															elseif (v172 == 2) then
																																v174[3] = v37() - (2 ^ 16);
																															elseif (v172 == 3) then
																																local v745 = 0;
																																local v746;
																																while true do
																																	if (0 == v745) then
																																		v746 = 0;
																																		while true do
																																			if (v746 == 0) then
																																				v174[3] = v37() - (2 ^ 16);
																																				v174[2 + 2] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v177 = 1;
																														end
																														if (v177 == 1) then
																															v171 = 2;
																															break;
																														end
																													end
																												end
																												if (v171 == 3) then
																													if (v34(v173, 3, 1 + 2) == 1) then
																														v174[4] = v75[v174[4]];
																													end
																													v70[v155] = v174;
																													break;
																												end
																											end
																											break;
																										end
																										if (0 == v170) then
																											v171 = 0;
																											v172 = nil;
																											v170 = 1;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (v156 == 0) then
																						v157 = 0;
																						v158 = nil;
																						v156 = 1;
																					end
																				end
																			end
																			for v159 = 1, v37() do
																				v71[v159 - (878 - (282 + 595))] = v42();
																			end
																			v136 = 1;
																		end
																		if (v136 == 1) then
																			return v73;
																		end
																	end
																end
																v124 = 1;
															end
															if (v124 == 1) then
																if (v69 == 0) then
																	local v137 = 0;
																	while true do
																		if (0 == v137) then
																			v70 = {};
																			v71 = {};
																			v137 = 1;
																		end
																		if (2 == v137) then
																			v69 = 1;
																			break;
																		end
																		if (v137 == 1) then
																			v72 = {};
																			v73 = {v70,v71,nil,v72};
																			v137 = 2;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v68 == 0) then
													v69 = 0;
													v70 = nil;
													v68 = 1;
												end
												if (v68 == 1) then
													v71 = nil;
													v72 = nil;
													v68 = 2;
												end
											end
										end
										v49 = 1;
									end
								end
							end
							break;
						end
						if (v45 == 0) then
							if (v31 == 4) then
								local v50 = 0;
								while true do
									if (v50 == 1) then
										function v39(v76)
											local v77 = 0;
											local v78;
											local v79;
											while true do
												if (v77 == 2) then
													v79 = {};
													for v125 = 1 - 0, #v78 do
														v79[v125] = v10(v9(v11(v78, v125, v125)));
													end
													v77 = 3;
												end
												if (v77 == 0) then
													v78 = nil;
													if not v76 then
														local v128 = 0;
														local v129;
														while true do
															if (v128 == 0) then
																v129 = 0;
																while true do
																	if ((1130 - (369 + 761)) == v129) then
																		v76 = v37();
																		if (v76 == 0) then
																			return "";
																		end
																		break;
																	end
																end
																break;
															end
														end
													end
													v77 = 1;
												end
												if (v77 == 3) then
													return v14(v79);
												end
												if (v77 == 1) then
													v78 = v11(v28, v32, (v32 + v76) - (1 + 0));
													v32 = v32 + v76;
													v77 = 2;
												end
											end
										end
										v31 = 5;
										break;
									end
									if (v50 == 0) then
										function v38()
											local v80 = 0;
											local v81;
											local v82;
											local v83;
											local v84;
											local v85;
											local v86;
											local v87;
											while true do
												if (v80 == 1) then
													v83 = nil;
													v84 = nil;
													v80 = 2;
												end
												if (v80 == 2) then
													v85 = nil;
													v86 = nil;
													v80 = 3;
												end
												if (v80 == 3) then
													v87 = nil;
													while true do
														local v127 = 0;
														while true do
															if (v127 == 0) then
																if (v81 == 0) then
																	local v138 = 0;
																	while true do
																		if (v138 == 0) then
																			v82 = v37();
																			v83 = v37();
																			v138 = 1;
																		end
																		if (v138 == 1) then
																			v81 = 2 - 1;
																			break;
																		end
																	end
																end
																if (v81 == 3) then
																	local v139 = 0;
																	while true do
																		if (v139 == 0) then
																			if (v86 == (0 + 0)) then
																				if (v85 == (0 - 0)) then
																					return v87 * (0 - 0);
																				else
																					local v163 = 0;
																					local v164;
																					while true do
																						if (v163 == 0) then
																							v164 = 0 + 0;
																							while true do
																								if (v164 == 0) then
																									v86 = (4 - 3) - (0 - 0);
																									v84 = 0;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			elseif (v86 == 2047) then
																				return ((v85 == (0 - 0)) and (v87 * (1 / (0 + 0)))) or (v87 * NaN);
																			end
																			return v16(v87, v86 - 1023) * (v84 + (v85 / ((2 + 0) ^ (1381 - (797 + 532)))));
																		end
																	end
																end
																v127 = 1;
															end
															if (v127 == 1) then
																if (v81 == (1 + 0)) then
																	local v140 = 0;
																	while true do
																		if (v140 == 0) then
																			v84 = 1 + 0;
																			v85 = (v34(v83, 1, 20) * ((1 + 1) ^ 32)) + v82;
																			v140 = 1;
																		end
																		if (v140 == 1) then
																			v81 = 2;
																			break;
																		end
																	end
																end
																if (v81 == (4 - 2)) then
																	local v141 = 0;
																	while true do
																		if (v141 == 0) then
																			v86 = v34(v83, 21, 1233 - (373 + 829));
																			v87 = ((v34(v83, 32) == (1 + 0)) and -1) or 1;
																			v141 = 1;
																		end
																		if (1 == v141) then
																			v81 = 734 - (476 + 255);
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v80 == 0) then
													v81 = 0 + 0;
													v82 = nil;
													v80 = 1;
												end
											end
										end
										v39 = nil;
										v50 = 1;
									end
								end
							end
							if (v31 == 3) then
								local v51 = 0;
								while true do
									if (v51 == 1) then
										v38 = nil;
										v31 = 4;
										break;
									end
									if (v51 == 0) then
										v37 = nil;
										function v37()
											local v88 = 0;
											local v89;
											local v90;
											local v91;
											local v92;
											while true do
												if (0 == v88) then
													v89, v90, v91, v92 = v9(v28, v32, v32 + (5 - 2));
													v32 = v32 + 4;
													v88 = 1;
												end
												if (1 == v88) then
													return (v92 * (16777454 - (64 + 174))) + (v91 * (9334 + 56202)) + (v90 * (732 - 476)) + v89;
												end
											end
										end
										v51 = 1;
									end
								end
							end
							v45 = 1;
						end
						if (v45 == 1) then
							if (v31 == 1) then
								local v52 = 0;
								while true do
									if (0 == v52) then
										v34 = nil;
										function v34(v93, v94, v95)
											if v95 then
												local v101 = 0;
												local v102;
												while true do
													if (v101 == 0) then
														v102 = (v93 / (2 ^ (v94 - (337 - (144 + 192))))) % ((2 - 0) ^ (((v95 - (2 - 1)) - (v94 - 1)) + 1));
														return v102 - (v102 % 1);
													end
												end
											else
												local v103 = 0;
												local v104;
												while true do
													if (v103 == 0) then
														v104 = (218 - (42 + 174)) ^ (v94 - 1);
														return (((v93 % (v104 + v104)) >= v104) and 1) or (0 + 0);
													end
												end
											end
										end
										v52 = 1;
									end
									if (v52 == 1) then
										v35 = nil;
										v31 = 2;
										break;
									end
								end
							end
							if (5 == v31) then
								local v53 = 0;
								while true do
									if (v53 == 1) then
										function v41(...)
											return {...}, v20("#", ...);
										end
										v31 = 6;
										break;
									end
									if (v53 == 0) then
										v40 = v37;
										v41 = nil;
										v53 = 1;
									end
								end
							end
							v45 = 2;
						end
					end
				end
				break;
			end
		end
	end
	vv17(), ...);
end
